{"version":3,"sources":["D:/Development/automata-visualizer/src/$_lazy_route_resource lazy","D:/Development/automata-visualizer/src/app/actions/index.ts","D:/Development/automata-visualizer/src/app/app.component.html","D:/Development/automata-visualizer/src/app/app.component.ts","D:/Development/automata-visualizer/src/app/app.module.ts","D:/Development/automata-visualizer/src/app/components/automata-view/automata-view.component.html","D:/Development/automata-visualizer/src/app/components/automata-view/automata-view.component.scss","D:/Development/automata-visualizer/src/app/components/automata-view/automata-view.component.ts","D:/Development/automata-visualizer/src/app/components/grammar-form-view/grammar-form-view.component.html","D:/Development/automata-visualizer/src/app/components/grammar-form-view/grammar-form-view.component.ts","D:/Development/automata-visualizer/src/app/models/dot-source.ts","D:/Development/automata-visualizer/src/app/reducers/grammar.ts","D:/Development/automata-visualizer/src/app/reducers/index.ts","D:/Development/automata-visualizer/src/app/services/environment.service.ts","D:/Development/automata-visualizer/src/app/services/visualizer.service.ts","D:/Development/automata-visualizer/src/app/services/viz-js-visualizer.ts","D:/Development/automata-visualizer/src/environments/environment.ts","D:/Development/automata-visualizer/src/main.ts","fs (ignored)","path (ignored)","crypto (ignored)"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Development/automata-visualizer/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import {Grammar} from '../models/grammar';\r\n\r\nexport const NEW_GRAMMAR = '[AV] New Grammar';\r\n\r\nexport class NewGrammar<NonTerminal extends string, Terminal extends string> {\r\n    readonly type = NEW_GRAMMAR;\r\n\r\n    constructor(public readonly grammar: Grammar<NonTerminal, Terminal>) {\r\n    }\r\n}\r\n\r\nexport type Actions<NonTerminal extends string, Terminal extends string> = NewGrammar<NonTerminal, Terminal>;\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Development/automata-visualizer/src/app/actions/index.ts","module.exports = \"<h1>Automata Visualizer</h1>\\r\\n<av-grammar-form-view *ngIf=\\\"grammar$ | async as grammar\\\" [grammar]=\\\"grammar\\\"\\r\\n                      (submit)=\\\"onSubmit($event)\\\"></av-grammar-form-view>\\r\\n<av-automata-view [dot]=\\\"pda$ | async\\\" title=\\\"Nondeterministic Pushdown Automaton\\\"></av-automata-view>\\r\\n<!--<av-automata-view [dot]=\\\"dpda$ | async\\\" title=\\\"Deterministic Pushdown Automaton\\\"></av-automata-view>-->\\r\\n<av-automata-view *ngIf=\\\"nfa$ | async as nfa; else noNFA\\\" [dot]=\\\"nfa\\\"\\r\\n                  title=\\\"Nondeterministic Finite Automaton\\\"></av-automata-view>\\r\\n<ng-template #noNFA>\\r\\n    <h2>Could not display an NFA, since the grammar is not linear.</h2>\\r\\n</ng-template>\\r\\n<!--<av-automata-view [dot]=\\\"dfa$ | async\\\" title=\\\"Deterministic Finite Automaton\\\"></av-automata-view>-->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Development/automata-visualizer/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import {Component} from '@angular/core';\r\nimport {Store} from '@ngrx/store';\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\nimport {NewGrammar} from './actions/index';\r\nimport {DotSource} from './models/dot-source';\r\nimport {Environment} from './services/environment.service';\r\nimport {Grammar} from './models/grammar';\r\nimport {\r\n    selectGrammar,\r\n    selectGrammarDPDADot,\r\n    selectGrammarDFADot,\r\n    selectGrammarNFADot,\r\n    selectGrammarPDADot,\r\n    State,\r\n} from './reducers';\r\n\r\n@Component({\r\n    selector: 'av-root',\r\n    templateUrl: './app.component.html',\r\n})\r\nexport class AppComponent {\r\n    readonly development: boolean;\r\n\r\n    readonly grammar$: Observable<Grammar<any, any>>;\r\n\r\n    readonly pda$: Observable<DotSource>;\r\n    // readonly dpda$: Observable<DotSource>;\r\n    readonly nfa$: Observable<DotSource | null>;\r\n    // readonly dfa$: Observable<DotSource>;\r\n\r\n    constructor(\r\n        {production}: Environment,\r\n        private readonly store: Store<State<any, any>>,\r\n    ) {\r\n        this.development = !production;\r\n\r\n        this.grammar$ = this.store.select(selectGrammar);\r\n        this.pda$ = this.store.select(selectGrammarPDADot);\r\n        // this.dpda$ = this.store.select(selectGrammarDPDADot);\r\n        this.nfa$ = this.store.select(selectGrammarNFADot);\r\n        // this.dfa$ = this.store.select(selectGrammarDFADot);\r\n    }\r\n\r\n    onSubmit(grammar: Grammar<any, any>) {\r\n        this.store.dispatch(new NewGrammar(grammar));\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Development/automata-visualizer/src/app/app.component.ts","import {NgModule} from '@angular/core';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {StoreModule} from '@ngrx/store';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {AutomataViewComponent} from './components/automata-view/automata-view.component';\r\nimport {GrammarFormViewComponent} from './components/grammar-form-view/grammar-form-view.component';\r\nimport {reducers} from './reducers/index';\r\nimport {Environment} from './services/environment.service';\r\nimport {Visualizer} from './services/visualizer.service';\r\nimport {VizJsVisualizer} from './services/viz-js-visualizer';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        AutomataViewComponent,\r\n        GrammarFormViewComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        ReactiveFormsModule,\r\n        StoreModule.forRoot(reducers),\r\n    ],\r\n    providers: [\r\n        Environment,\r\n        {provide: Visualizer, useClass: VizJsVisualizer},\r\n    ],\r\n    bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Development/automata-visualizer/src/app/app.module.ts","module.exports = \"<h2>{{title}}</h2>\\r\\n<div [innerHTML]=\\\"visualization\\\">\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Development/automata-visualizer/src/app/components/automata-view/automata-view.component.html\n// module id = ../../../../../src/app/components/automata-view/automata-view.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Development/automata-visualizer/src/app/components/automata-view/automata-view.component.scss\n// module id = ../../../../../src/app/components/automata-view/automata-view.component.scss\n// module chunks = main","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {SafeHtml} from '@angular/platform-browser';\r\n\r\nimport {DotSource} from '../../models/dot-source';\r\nimport {Visualizer} from '../../services/visualizer.service';\r\n\r\n@Component({\r\n    selector: 'av-automata-view',\r\n    templateUrl: './automata-view.component.html',\r\n    styleUrls: ['./automata-view.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AutomataViewComponent {\r\n    @Input() readonly dot: DotSource;\r\n    @Input() readonly title: string;\r\n\r\n    constructor(\r\n        private readonly visualizer: Visualizer,\r\n        ) {\r\n    }\r\n\r\n    get visualization(): SafeHtml {\r\n        return this.visualizer.visualize(this.dot);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Development/automata-visualizer/src/app/components/automata-view/automata-view.component.ts","module.exports = \"<form [formGroup]=\\\"form\\\">\\r\\n    <table>\\r\\n        <thead>\\r\\n        <tr>\\r\\n            <th></th>\\r\\n            <th>Non-Terminal</th>\\r\\n            <th>Production</th>\\r\\n            <th></th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr\\r\\n            *ngFor=\\\"let control of form.controls; first as isFirst; last as isLast; index as ruleIndex\\\"\\r\\n            [formGroup]=\\\"control\\\">\\r\\n            <td>\\r\\n                <span *ngIf=\\\"isFirst\\\">\\r\\n                    Start\\r\\n                </span>\\r\\n            </td>\\r\\n            <td>\\r\\n                <input formControlName=\\\"nonTerminal\\\" (ngModelChange)=\\\"isLast && $event !== '' && onFocusLast()\\\">\\r\\n                &rarr;\\r\\n            </td>\\r\\n            <td>\\r\\n                <input formControlName=\\\"production\\\" (focus)=\\\"isLast && onFocusLast()\\\">\\r\\n            </td>\\r\\n            <td>\\r\\n                <button\\r\\n                    *ngIf=\\\"!(isFirst || isLast)\\\"\\r\\n                    (click)=\\\"onRemoveRule(ruleIndex)\\\"\\r\\n                    type=\\\"button\\\">\\r\\n                    Remove\\r\\n                </button>\\r\\n            </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</form>\\r\\n<div *ngIf=\\\"form.invalid\\\">\\r\\n    Overall Errors: {{form.errors | json}}\\r\\n    Control Errors:\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let control of form.controls\\\">\\r\\n            Group Errors: {{control.errors | json}}\\r\\n            <ul>\\r\\n                <li>\\r\\n                    NonTerminal Errors: {{control.controls['nonTerminal'].errors | json}}\\r\\n                </li>\\r\\n                <li>\\r\\n                    Production Errors: {{control.controls['production'].errors | json}}\\r\\n                </li>\\r\\n            </ul>\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Development/automata-visualizer/src/app/components/grammar-form-view/grammar-form-view.component.html\n// module id = ../../../../../src/app/components/grammar-form-view/grammar-form-view.component.html\n// module chunks = main","import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\r\nimport {FormArray, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {filter, map, tap} from 'rxjs/operators';\r\nimport {Subscription} from 'rxjs/Subscription';\r\n\r\nimport {Grammar} from '../../models/grammar';\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\n/*\r\nconst exampleFormValue = new FormArray([\r\n    new FormGroup({\r\n        nonTerminal: new FormControl('S'),\r\n        production: new FormControl('A'),\r\n    }),\r\n    new FormGroup({\r\n        nonTerminal: new FormControl('A'),\r\n        production: new FormControl('aAb'),\r\n    }),\r\n    new FormGroup({\r\n        nonTerminal: new FormControl('A'),\r\n        production: new FormControl(''),\r\n    }),\r\n    new FormGroup({\r\n        nonTerminal: new FormControl(''),\r\n        production: new FormControl(''),\r\n    }),\r\n]);\r\n*/\r\n\r\ntype FormValue = { nonTerminal: string, production: string }[];\r\n\r\nconst grammarToForm =\r\n    <NonTerminal extends string, Terminal extends string>\r\n    (grammar: Grammar<NonTerminal, Terminal>): FormArray => {\r\n        const controls = grammar\r\n            .map(({nonTerminal, production}) => new FormGroup({\r\n                nonTerminal: new FormControl(\r\n                    nonTerminal,\r\n                    [\r\n                        Validators.required,\r\n                        Validators.minLength(1),\r\n                        Validators.maxLength(1),\r\n                    ],\r\n                ),\r\n                production: new FormControl(production.join('')),\r\n            }));\r\n\r\n        return new FormArray(controls);\r\n    };\r\n\r\nconst formToGrammar =\r\n    (formValue: FormValue): Grammar<any, any> => {\r\n        const rules = formValue.filter(value => value.nonTerminal !== '');\r\n\r\n        return rules.reduce((prev, next) => ([\r\n            ...prev,\r\n            {\r\n                nonTerminal: next.nonTerminal,\r\n                production: next.production.split(''),\r\n            },\r\n        ]), []);\r\n    };\r\n\r\n@Component({\r\n    selector: 'av-grammar-form-view',\r\n    templateUrl: './grammar-form-view.component.html',\r\n})\r\nexport class GrammarFormViewComponent<NonTerminal extends string, Terminal extends string>\r\n    implements OnChanges, OnInit {\r\n    @Input() grammar: Grammar<NonTerminal, Terminal>;\r\n    @Output() submit = new EventEmitter<Grammar<NonTerminal, Terminal>>();\r\n\r\n    form: FormArray;\r\n    valueChangesSubscription: Subscription;\r\n    valueChanges$: Observable<Grammar<NonTerminal, Terminal>>;\r\n\r\n    ngOnChanges() {\r\n        const formArray = grammarToForm(this.grammar);\r\n\r\n        if (this.valueChangesSubscription) {\r\n            this.valueChangesSubscription.unsubscribe();\r\n        }\r\n\r\n        if (this.form) {\r\n            let i;\r\n            for (i = 0; i < formArray.length; ++i) {\r\n                this.form.at(i).setValue(formArray.at(i).value, {emitEvent: false});\r\n            }\r\n\r\n            if (i === this.form.length) {\r\n                this.form.push(new FormGroup({\r\n                    nonTerminal: new FormControl(''),\r\n                    production: new FormControl(''),\r\n                }));\r\n            }\r\n        } else {\r\n            this.form = formArray;\r\n\r\n            this.form.push(new FormGroup({\r\n                nonTerminal: new FormControl(''),\r\n                production: new FormControl(''),\r\n            }));\r\n\r\n            this.valueChanges$ =\r\n                this.form.valueChanges\r\n                    .pipe(\r\n                        filter(() => this.form.valid),\r\n                        map((value: FormValue) => formToGrammar(value.filter(({nonTerminal}) => nonTerminal !== ''))),\r\n                    );\r\n        }\r\n\r\n        this.valueChangesSubscription = this.valueChanges$.subscribe(this.submit);\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onFocusLast(): void {\r\n        const row = this.form.controls[this.form.length - 1] as FormGroup;\r\n\r\n        if (row.get('nonTerminal')!.value === '') {\r\n            return;\r\n        }\r\n\r\n        row.controls.nonTerminal.setValidators([\r\n            Validators.required,\r\n            Validators.minLength(1),\r\n            Validators.maxLength(1),\r\n        ]);\r\n\r\n        this.form.push(new FormGroup({\r\n            nonTerminal: new FormControl(''),\r\n            production: new FormControl(''),\r\n        }));\r\n    }\r\n\r\n    onRemoveRule(ruleIndex: number): void {\r\n        this.form.removeAt(ruleIndex);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Development/automata-visualizer/src/app/components/grammar-form-view/grammar-form-view.component.ts","export class DotSource {\r\n    constructor(public readonly payload: string) {\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Development/automata-visualizer/src/app/models/dot-source.ts","import {compose, createSelector} from '@ngrx/store';\r\nimport deepmerge from 'deepmerge';\r\n\r\nimport {Actions, NEW_GRAMMAR} from '../actions';\r\nimport {Grammar} from '../models/grammar';\r\nimport {PushdownAutomata} from '../models/pushdown-automata';\r\nimport {DeterministicPushdownAutomata} from '../models/deterministic-pushdown-automata';\r\nimport {NonDeterministicFiniteAutomata} from '../models/nondeterministic-finite-automata';\r\nimport {DeterministicFiniteAutomata} from '../models/deterministic-finite-automata';\r\nimport {DotSource} from '../models/dot-source';\r\nimport {PartialRecord} from '../models/partial-record';\r\n\r\nexport type State<NonTerminal extends string, Terminal extends string> = Grammar<NonTerminal, Terminal>;\r\n\r\n// export const initialState: State<'S', 'a' | 'b'> = [\r\n//     {\r\n//         nonTerminal: 'S',\r\n//         production: ['a', 'S'],\r\n//     },\r\n//     {\r\n//         nonTerminal: 'S',\r\n//         production: ['b', 'S'],\r\n//     },\r\n//     {\r\n//         nonTerminal: 'S',\r\n//         production: [],\r\n//     }\r\n// ];\r\n\r\nexport const initialState: State<string, string> = [\r\n    {\r\n        nonTerminal: 'S',\r\n        production: ['a', 'A'],\r\n    },\r\n    {\r\n        nonTerminal: 'A',\r\n        production: ['a', 'b', 'S'],\r\n    },\r\n    {\r\n        nonTerminal: 'A',\r\n        production: [],\r\n    },\r\n];\r\n\r\nexport function reducer<NonTerminal extends string,\r\n    Terminal extends string,\r\n    NextNonTerminal extends string,\r\n    NextTerminal extends string>\r\n(\r\n    state: State<NonTerminal, Terminal> | undefined = initialState as any,\r\n    action: Actions<NextNonTerminal, NextTerminal>,\r\n): State<NonTerminal, Terminal> | State<NextNonTerminal, NextTerminal> {\r\n    switch (action.type) {\r\n        case NEW_GRAMMAR:\r\n            return action.grammar;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const id: <T>(t: T) => T = x => x;\r\n\r\nexport const selectGNF = id; // TODO\r\n\r\nconst selectPDAFromGNF: <NonTerminal extends string, Terminal extends string>(state: State<NonTerminal, Terminal>) =>\r\n    PushdownAutomata<'start' | 'rules' | 'done', Terminal, NonTerminal | Terminal | 'ZZ'>\r\n    = grammar => ({\r\n    initialStack: 'ZZ',\r\n    startState: 'start',\r\n    accepting: ['done'],\r\n    transition: [\r\n        {\r\n            state: 'start',\r\n            input: '',\r\n            stack: 'ZZ',\r\n            result: {\r\n                state: 'rules',\r\n                stack: [grammar[0].nonTerminal, 'ZZ'],\r\n            },\r\n        },\r\n        ...grammar\r\n            .map(({nonTerminal, production}) => ({\r\n                state: 'rules' as 'rules',\r\n                input: production[0] as any,\r\n                stack: nonTerminal,\r\n                result: {\r\n                    state: 'rules' as 'rules',\r\n                    stack: production.length > 1 ? production.slice(1) : [] as any[],\r\n                },\r\n            })),\r\n        {\r\n            state: 'rules',\r\n            input: '',\r\n            stack: 'ZZ',\r\n            result: {\r\n                state: 'done',\r\n                stack: ['ZZ'],\r\n            },\r\n        },\r\n    ],\r\n});\r\n\r\nexport const selectPDA: <NonTerminal extends string, Terminal extends string>(state: State<NonTerminal, Terminal>) =>\r\n    PushdownAutomata<'start' | 'rules' | 'done', Terminal, NonTerminal | Terminal>\r\n    = null as any; // TODO Section 7.2 Theorem 7.1\r\n\r\nconst PDAToDot: <PDAState extends string, Input extends string, Stack extends string>\r\n(pda: PushdownAutomata<PDAState, Input, Stack>) =>\r\n    DotSource\r\n    = pda => {\r\n    const showStack = (stack: string) => stack === 'ZZ' ? 'Z' : stack;\r\n\r\n    const nodes =\r\n        pda.transition\r\n            .sort((left, right) => left.state === pda.startState ? -1 : 1)\r\n            .map(transition => ({\r\n                from: transition.state,\r\n                to: transition.result.state,\r\n                labels: [\r\n                    `${transition.input || '&lambda;'}, ${showStack(transition.stack)} | ${transition.result.stack.map(\r\n                        showStack).join('')}`,\r\n                ],\r\n            }))\r\n            .map(({from, to, labels}) => ({\r\n                [from + ' -> ' + to]: labels,\r\n            }))\r\n            .reduce((all, next) => deepmerge(all, next), {});\r\n\r\n    return new DotSource(`\r\n    digraph {\r\n        rankdir=LR;\r\n        splines=true;\r\n        overlap = false;\r\n        node [shape = doublecircle]; ${pda.accepting.join(' ')}\r\n        node [shape = circle];\r\n        ${Object.entries(nodes).map(([key, labels]) => `\r\n            ${key} [ label=\"${labels.join('\\\\n')}\" ];\r\n        `).join('\\n')}\r\n    }\r\n    `);\r\n};\r\n\r\nexport const selectPDADot = createSelector(selectGNF, createSelector(selectPDAFromGNF, PDAToDot));\r\n\r\nexport const selectDPDA: <NonTerminal extends string, Terminal extends string>(state: State<NonTerminal, Terminal>) =>\r\n    DeterministicPushdownAutomata<any, Terminal, NonTerminal | Terminal>\r\n    = null as any; // TODO\r\n\r\nexport const DPDAToDot: <DPDAState extends string, Input extends string, Stack extends string>\r\n(dpda: DeterministicPushdownAutomata<DPDAState, Input, Stack>) =>\r\n    DotSource\r\n    = null as any; // TODO\r\n\r\n// export const selectDPDADot = createSelector(selectDPDA, DPDAToDot); // TODO\r\nexport const selectDPDADot = compose(selectDPDA, DPDAToDot); // TODO\r\n\r\nexport const selectNonTerminals: <NonTerminal extends string>(grammar: Grammar<NonTerminal, string>)\r\n    => NonTerminal[]\r\n    = <NonTerminal extends string>(grammar: Grammar<NonTerminal, string>) => grammar\r\n    .map(rule => rule.nonTerminal)\r\n    .reduce((result, next) => result.includes(next) ? result : [...result, next], [] as NonTerminal[]);\r\n\r\nexport const isLeftLinear: (grammar: Grammar<string, string>) => boolean =\r\n    createSelector(selectNonTerminals, id,\r\n        (nonTerminals, grammar) =>\r\n            grammar.every(({production}) => {\r\n                const nonTerminalsInProduction = production.filter(value => nonTerminals.includes(value));\r\n                return nonTerminalsInProduction.length === 1\r\n                    && production[0] === nonTerminalsInProduction[0] ||\r\n                    nonTerminalsInProduction.length === 0;\r\n            }),\r\n    );\r\n\r\nexport const isRightLinear: (grammar: Grammar<string, string>) => boolean =\r\n    createSelector(selectNonTerminals, id,\r\n        (nonTerminals, grammar) =>\r\n            grammar.every(({production}) => {\r\n                const nonTerminalsInProduction = production.filter(value => nonTerminals.includes(value));\r\n                return nonTerminalsInProduction.length === 1\r\n                    && production[production.length - 1] === nonTerminalsInProduction[0] ||\r\n                    nonTerminalsInProduction.length === 0;\r\n            }),\r\n    );\r\n\r\nexport const selectLeftLinearNFA: <NonTerminal extends string, Terminal extends string>(grammar: Grammar<NonTerminal, Terminal>) =>\r\n    NonDeterministicFiniteAutomata<string, string>\r\n    = createSelector(\r\n    selectNonTerminals,\r\n    id,\r\n    <NonTerminal extends string, Terminal extends string>(\r\n        nonTerminals: NonTerminal[],\r\n        grammar: Grammar<NonTerminal, Terminal>,\r\n    ) => {\r\n        const reversedGrammar = grammar.map(({nonTerminal, production}) => ({\r\n            nonTerminal,\r\n            production: [...production].reverse(),\r\n        }));\r\n\r\n        const rightLinearNFA = selectNFA(reversedGrammar);\r\n\r\n        if (rightLinearNFA == null) {\r\n            throw new Error;\r\n        }\r\n\r\n        // TODO\r\n        const startState = 'Left-Linear Start';\r\n        const accepting = [rightLinearNFA.startState];\r\n        const transitionFromStart = {\r\n            '': {\r\n                'Left-Linear Start': rightLinearNFA.accepting,\r\n            },\r\n        };\r\n\r\n        const transition = Object.entries(rightLinearNFA.transition)\r\n            .map(([input, transitions]) => ({\r\n                input,\r\n                transitions: Object.entries(transitions)\r\n                    .map(([from, tos]) =>\r\n                        tos.map((to: string) => ({[to]: [from]}))\r\n                            .reduce((all: any, next: any) => deepmerge(all, next), {}))\r\n                    .reduce((all: any, next: any) => deepmerge(all, next), {})\r\n            }))\r\n            .reduce((all, {input, transitions}) => deepmerge(all, {\r\n                [input]: transitions,\r\n            }), transitionFromStart);\r\n\r\n        return {\r\n            startState,\r\n            accepting,\r\n            transition,\r\n        };\r\n    },\r\n);\r\n\r\nexport const selectRightLinearNFA: <NonTerminal extends string, Terminal extends string>(grammar: Grammar<NonTerminal, Terminal>) =>\r\n    NonDeterministicFiniteAutomata<string, Terminal>\r\n    = createSelector(\r\n    selectNonTerminals,\r\n    id,\r\n    <NonTerminal extends string, Terminal extends string>(\r\n        nonTerminals: NonTerminal[],\r\n        grammar: Grammar<NonTerminal, Terminal>,\r\n    ) => ({\r\n        startState: grammar[0].nonTerminal,\r\n        accepting: ['accept'],\r\n        transition: grammar\r\n            .reduce(\r\n                (transitions, {nonTerminal: variable, production: rule}) => {\r\n                    const production = nonTerminals.includes(rule[rule.length - 1] as NonTerminal)\r\n                        ? rule\r\n                        : [\r\n                            ...rule,\r\n                            'accept',\r\n                        ];\r\n\r\n                    const productionStateNames = production\r\n                        .slice(0, production.length - 1)\r\n                        .map((_, index) => production.slice(0, index).join(''))\r\n                        .map(name => variable + name);\r\n\r\n                    const productionTransitionResults = [\r\n                        ...productionStateNames.slice(1),\r\n                        production[production.length - 1],\r\n                    ];\r\n\r\n                    const productionTransitions = productionStateNames.length > 0 ? productionStateNames.map((\r\n                        state,\r\n                        stateIndex,\r\n                    ) => {\r\n                        const transitionResult = productionTransitionResults[stateIndex];\r\n                        const transitionInput = production[stateIndex];\r\n\r\n                        return {\r\n                            [transitionInput]: {\r\n                                [state]: [transitionResult],\r\n                            },\r\n                        };\r\n                    }) : [\r\n                        {\r\n                            '': {\r\n                                [variable as string]: [productionTransitionResults[0]],\r\n                            },\r\n                        },\r\n                    ];\r\n\r\n                    return deepmerge(transitions, productionTransitions.reduce(\r\n                        (all, next) => deepmerge(all, next),\r\n                        {},\r\n                    ));\r\n                },\r\n                {},\r\n            ),\r\n    }),\r\n);\r\n\r\nexport const selectNFA: <NonTerminal extends string, Terminal extends string>(state: State<NonTerminal, Terminal>) =>\r\n    NonDeterministicFiniteAutomata<string, string> | null\r\n    = createSelector(isLeftLinear, id, (leftLinear, grammar) => leftLinear\r\n    ? selectLeftLinearNFA(grammar)\r\n    : isRightLinear(grammar)\r\n        ? selectRightLinearNFA(grammar)\r\n        : null,\r\n);\r\n\r\nexport const NFAToDot: <NFAState extends string, Input extends string>\r\n(nfa: NonDeterministicFiniteAutomata<NFAState, Input>) =>\r\n    DotSource\r\n    = <NFAState extends string, Input extends string>\r\n(nfa: NonDeterministicFiniteAutomata<NFAState, Input>) => {\r\n    console.log('nfa', nfa);\r\n\r\n    const labelsAndTransitions = [] as { from: string, to: string, label: string }[];\r\n\r\n    for (const [label, stateTransition] of Object.entries(nfa.transition)) {\r\n        for (const [from, tos] of Object.entries(stateTransition)) {\r\n            for (const to of tos) {\r\n                labelsAndTransitions.push({from, to, label: label || '&lambda;'});\r\n            }\r\n        }\r\n    }\r\n\r\n    return new DotSource(`\r\n    digraph {\r\n        rankdir=LR;\r\n        splines=true;\r\n        overlap = false;\r\n        node [shape = doublecircle]; ${nfa.accepting.join(' ')}\r\n        node [shape = circle];\r\n        ${labelsAndTransitions.map(({from, label, to}) => `\r\n        \"${from}\" -> \"${to}\" [ label=\"${label}\" ];\r\n        `).join('\\n')}\r\n    }\r\n    `);\r\n};\r\n\r\nexport const selectNFADot = createSelector(selectNFA, nfa => nfa ? NFAToDot(nfa) : null);\r\n\r\nexport const selectDFA: <NonTerminal extends string, Terminal extends string>(state: State<NonTerminal, Terminal>) =>\r\n    DeterministicFiniteAutomata<any, Terminal>\r\n    = null as any; // TODO\r\n\r\nexport const DFAToDot: <DFAState extends string, Input extends string>\r\n(dfa: NonDeterministicFiniteAutomata<DFAState, Input>) =>\r\n    DotSource\r\n    = null as any; // TODO\r\n\r\n// export const selectDFADot = createSelector(selectDFA, DFAToDot); // TODO\r\nexport const selectDFADot = compose(selectDFA, DFAToDot); // TODO\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Development/automata-visualizer/src/app/reducers/grammar.ts","import {ActionReducerMap, createFeatureSelector, createSelector} from '@ngrx/store';\r\n\r\nimport * as fromGrammar from './grammar';\r\n\r\nexport interface State<NonTerminal extends string, Terminal extends string> {\r\n    grammar: fromGrammar.State<NonTerminal, Terminal>;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State<any, any>> = {\r\n    grammar: fromGrammar.reducer,\r\n};\r\n\r\nexport const selectGrammar = createFeatureSelector<fromGrammar.State<any, any>>('grammar');\r\n\r\nexport const selectGrammarPDADot = createSelector(selectGrammar, fromGrammar.selectPDADot);\r\n\r\nexport const selectGrammarDPDADot = createSelector(selectGrammar, fromGrammar.selectDPDADot);\r\n\r\nexport const selectGrammarNFADot = createSelector(selectGrammar, fromGrammar.selectNFADot);\r\n\r\nexport const selectGrammarDFADot = createSelector(selectGrammar, fromGrammar.selectDFADot);\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Development/automata-visualizer/src/app/reducers/index.ts","import {environment} from '../../environments/environment';\r\n\r\nexport class Environment {\r\n    readonly production = environment.production;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Development/automata-visualizer/src/app/services/environment.service.ts","import {SafeHtml} from '@angular/platform-browser';\r\n\r\nimport {DotSource} from '../models/dot-source';\r\n\r\nexport abstract class Visualizer {\r\n    abstract visualize(source: DotSource): SafeHtml;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Development/automata-visualizer/src/app/services/visualizer.service.ts","import {Injectable} from '@angular/core';\r\nimport Viz from 'viz.js';\r\n\r\nimport {DotSource} from '../models/dot-source';\r\nimport {Visualizer} from './visualizer.service';\r\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\r\n\r\n@Injectable()\r\nexport class VizJsVisualizer implements Visualizer {\r\n    constructor(private readonly sanitizer: DomSanitizer) {\r\n    }\r\n\r\n    visualize(source: DotSource): SafeHtml {\r\n        try {\r\n            const viz = Viz(source.payload);\r\n            return this.sanitizer.bypassSecurityTrustHtml(viz);\r\n        } catch (e) {\r\n            console.error(source.payload);\r\n            throw e;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Development/automata-visualizer/src/app/services/viz-js-visualizer.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/Development/automata-visualizer/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// D:/Development/automata-visualizer/src/main.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// fs (ignored)\n// module id = 0\n// module chunks = main","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// path (ignored)\n// module id = 1\n// module chunks = main","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// crypto (ignored)\n// module id = 3\n// module chunks = main"],"sourceRoot":"webpack:///"}